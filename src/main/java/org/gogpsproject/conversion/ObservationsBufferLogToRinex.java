/*
 * Copyright (c) 2011 Eugenio Realini, Mirko Reguzzoni, Cryms sagl - Switzerland. All Rights Reserved.
 *
 * This file is part of goGPS Project (goGPS).
 *
 * goGPS is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3
 * of the License, or (at your option) any later version.
 *
 * goGPS is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with goGPS.  If not, see <http://www.gnu.org/licenses/>.
 *
 */
package org.gogpsproject.conversion;

import java.io.IOException;
import java.util.Calendar;

import org.gogpsproject.Observations;
import org.gogpsproject.ObservationsBuffer;
import org.gogpsproject.producer.rinex.RinexV2Producer;

/**
 * @author Lorenzo Patocchi, cryms.com
 *
 * This class converts log files generated by ObservationsBuffer into proper RINEX file
 * Arguments: <dat file> <y|n>
 * where y=master log and n=rover log
 *
 */
public class ObservationsBufferLogToRinex {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		Calendar c = Calendar.getInstance();
		int yy = c.get(Calendar.YEAR)-2000;
		int p=0;
		String inFile = args[p++];
		String outFile = inFile.indexOf(".dat")>0?inFile.substring(0, inFile.indexOf(".dat"))+"."+yy+"o":inFile+"."+yy+"o";

		System.out.println("in :"+inFile);
		System.out.println("out:"+outFile);

		ObservationsBuffer masterIn = new ObservationsBuffer();
		try {
			masterIn.readFromLog(inFile,false);
		} catch (IOException e) {
			e.printStackTrace();
		}

		System.out.println("RINEX");
		RinexV2Producer rp = new RinexV2Producer(args!=null&&args.length>=p+1&&args[p++].startsWith("y"), false);
		rp.setFilename(outFile);
		rp.setDefinedPosition(masterIn.getDefinedPosition());

		Observations o = masterIn.getNextObservations();
		while(o!=null){
			rp.addObservations(o);
			o = masterIn.getNextObservations();
		}
		rp.streamClosed();
		System.out.println("END");

	}

}
